{"ast":null,"code":"var _jsxFileName = \"/Users/delriorob/training/it-was-you/src/components/TriviaComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TextContent.css';\nimport './TriviaComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TriviaComponent() {\n  _s();\n  var _topics$find;\n  const [activeTopic, setActiveTopic] = useState(null);\n  const topics = [{\n    id: 1,\n    title: \"Topic 1\",\n    content: \"Details about Topic 1\"\n  }, {\n    id: 2,\n    title: \"Topic 2\",\n    content: \"Details about Topic 2\"\n  }, {\n    id: 3,\n    title: \"Topic 3\",\n    content: \"Details about Topic 3\"\n  }];\n  const toggleTopic = id => {\n    setActiveTopic(activeTopic === id ? null : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion mobile\",\n      children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-title\",\n          onClick: () => toggleTopic(topic.id),\n          children: topic.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), activeTopic === topic.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-content\",\n          children: topic.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)]\n      }, topic.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"two-column web\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-list\",\n        children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-title\",\n          onClick: () => toggleTopic(topic.id),\n          children: topic.title\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-detail\",\n        children: activeTopic && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-content\",\n          children: (_topics$find = topics.find(topic => topic.id === activeTopic)) === null || _topics$find === void 0 ? void 0 : _topics$find.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(TriviaComponent, \"zHwa4gBYdzhC25onulFYzeES/A0=\");\n_c = TriviaComponent;\nexport default TriviaComponent;\nvar _c;\n$RefreshReg$(_c, \"TriviaComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TriviaComponent","_s","_topics$find","activeTopic","setActiveTopic","topics","id","title","content","toggleTopic","className","children","map","topic","onClick","fileName","_jsxFileName","lineNumber","columnNumber","find","_c","$RefreshReg$"],"sources":["/Users/delriorob/training/it-was-you/src/components/TriviaComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TextContent.css';\nimport './TriviaComponent.css';\n\nfunction TriviaComponent() {\n    const [activeTopic, setActiveTopic] = useState(null);\n\n    const topics = [\n        { id: 1, title: \"Topic 1\", content: \"Details about Topic 1\" },\n        { id: 2, title: \"Topic 2\", content: \"Details about Topic 2\" },\n        { id: 3, title: \"Topic 3\", content: \"Details about Topic 3\" }\n    ];\n\n    const toggleTopic = (id) => {\n        setActiveTopic(activeTopic === id ? null : id);\n    };\n\n    return (\n        <div className=\"text-content\">\n            {/* Mobile Accordion Layout */}\n            <div className=\"accordion mobile\">\n                {topics.map(topic => (\n                    <div key={topic.id} className=\"topic\">\n                        <div className=\"topic-title\" onClick={() => toggleTopic(topic.id)}>\n                            {topic.title}\n                        </div>\n                        {activeTopic === topic.id && (\n                            <div className=\"topic-content\">{topic.content}</div>\n                        )}\n                    </div>\n                ))}\n            </div>\n\n            {/* Web Two-Column Layout */}\n            <div className=\"two-column web\">\n                <div className=\"topic-list\">\n                    {topics.map(topic => (\n                        <div key={topic.id} className=\"topic-title\" onClick={() => toggleTopic(topic.id)}>\n                            {topic.title}\n                        </div>\n                    ))}\n                </div>\n                <div className=\"topic-detail\">\n                    {activeTopic && (\n                        <div className=\"topic-content\">\n                            {topics.find(topic => topic.id === activeTopic)?.content}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TriviaComponent;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}